#include <stdio.h>
#include <stdlib.h>

// Type definitions
typedef struct node {
    int data;
    struct node* next;
} Node;

typedef Node* NODE;

// Add node to end of list
NODE addNode(NODE head, int data) {
    NODE newNode = (NODE)malloc(sizeof(Node));
    newNode->data = data;
    newNode->next = NULL;

    if (head == NULL) {
        head = newNode;
    } else {
        NODE temp = head;
        while (temp->next != NULL) {
            temp = temp->next;
        }
        temp->next = newNode;
    }

    return head;
}

// Display list
void displayList(NODE head) {
    NODE temp = head;
    while (temp != NULL) {
        printf("%d --> ", temp->data);
        temp = temp->next;
    }
    printf("NULL\n");
}

// Concatenate list2 to end of list1
NODE concatenate(NODE list1, NODE list2) {
    if (list1 == NULL) return list2;
    if (list2 == NULL) return list1;

    NODE temp = list1;
    while (temp->next != NULL) {
        temp = temp->next;
    }
    temp->next = list2;
    return list1;
}

// Main function with menu
int main() {
    NODE list1 = NULL, list2 = NULL;
    int choice, x;

    while (1) {
        printf("\nMenu:\n");
        printf("1. Create SLL1\n");
        printf("2. Create SLL2\n");
        printf("3. Display SLL1\n");
        printf("4. Display SLL2\n");
        printf("5. Concatenate SLL2 to SLL1\n");
        printf("6. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
        case 1:
            printf("Enter elements for SLL1 (-1 to end): ");
            while (1) {
                scanf("%d", &x);
                if (x == -1) break;
                list1 = addNode(list1, x);
            }
            break;
        case 2:
            printf("Enter elements for SLL2 (-1 to end): ");
            while (1) {
                scanf("%d", &x);
                if (x == -1) break;
                list2 = addNode(list2, x);
            }
            break;
        case 3:
            printf("SLL1: ");
            displayList(list1);
            break;
        case 4:
            printf("SLL2: ");
            displayList(list2);
            break;
        case 5:
            list1 = concatenate(list1, list2);
            printf("Concatenated List (SLL1 + SLL2): ");
            displayList(list1);
            break;
        case 6:
            printf("Exiting...\n");
            exit(0);
        default:
            printf("Invalid choice. Please try again.\n");
        }
    }

    return 0;
}
